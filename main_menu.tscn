[gd_scene load_steps=2 format=3 uid="uid://bkkf60aapjatx"]

[sub_resource type="GDScript" id="GDScript_rhts7"]
script/source = "# main_menu.gd
extends Node2D # Or Node2D, whatever your root node is

# Define the available control types
enum ControlType { HUMAN, DYNAMIC_SCRIPTING, DECISION_TREE, NEURO_DYNAMIC }
const CONTROL_TYPE_STRINGS = [\"Human\", \"Dynamic Scripting\", \"Decision Tree\", \"Neuro-Dynamic\"]

# --- Node References ---
@onready var p1_selector: OptionButton = $Player1Options/P1ControlSelector
@onready var p2_selector: OptionButton = $Player2Options/P2ControlSelector
@onready var start_button: Button = $StartButton
@onready var match_count_input: LineEdit = $MatchCount_Input
#@onready var error_label: Label = $ErrorLabel # Optional

# --- Scene Path ---
const GAME_LEVEL_PATH = \"res://Levels/sample_level.tscn\" # Verify this path is correct

func _ready():
	# Populate the OptionButtons
	populate_selector(p1_selector)
	populate_selector(p2_selector)

	# Set default selections based on requirements
	p1_selector.select(ControlType.HUMAN) # Ryu defaults to Human
	p2_selector.select(ControlType.DYNAMIC_SCRIPTING) # Dummy Ryu defaults to Dynamic Scripting

	# Connect button signal
	start_button.pressed.connect(_on_start_button_pressed)

func populate_selector(selector: OptionButton):
	selector.clear()
	for i in range(CONTROL_TYPE_STRINGS.size()):
		selector.add_item(CONTROL_TYPE_STRINGS[i], i)

func _on_start_button_pressed():
	var input_text = match_count_input.text
	
	if input_text.is_valid_int():
		var parsed_count = input_text.to_int()
		GameSettings.match_count = parsed_count
		print(\"Match count entered:\", parsed_count)
	else:
		print(\"Invalid input. Please enter a whole number.\")
	# Get selected control types as strings
	var p1_control_str = CONTROL_TYPE_STRINGS[p1_selector.selected]
	var p2_control_str = CONTROL_TYPE_STRINGS[p2_selector.selected]

	# Store selections in the global GameSettings
	# Ensure GameSettings Autoload is set up (See step 3)
	if not ProjectSettings.has_setting(\"autoload/GameSettings\"):
		print(\"ERROR: GameSettings autoload not found. Please configure it in Project Settings.\")
		#if error_label: error_label.text = \"Error: GameSettings not configured.\"
		return

	GameSettings.player1_control_type = p1_control_str
	GameSettings.player2_control_type = p2_control_str

	print(\"Starting game:\")
	print(\"  Player 1 (Ryu) Control: \", GameSettings.player1_control_type)
	print(\"  Player 2 (Dummy Ryu) Control: \", GameSettings.player2_control_type)

	# Change scene to the game level
	var result = get_tree().change_scene_to_file(GAME_LEVEL_PATH)
	if result != OK:
		print(\"ERROR: Failed to change scene to \", GAME_LEVEL_PATH)
		#if error_label: error_label.text = \"Error: Could not load game level.\"
"

[node name="main_menu" type="Node2D"]
script = SubResource("GDScript_rhts7")

[node name="TitleLabel" type="Label" parent="."]
offset_left = 561.0
offset_top = 7.0
offset_right = 720.0
offset_bottom = 46.0
theme_override_font_sizes/font_size = 28
text = "Neuro Fight"

[node name="Player1Options" type="VBoxContainer" parent="."]
offset_left = 208.0
offset_top = 109.0
offset_right = 453.0
offset_bottom = 221.0

[node name="P1Label" type="Label" parent="Player1Options"]
layout_mode = 2
theme_override_font_sizes/font_size = 23
text = "Player 1 (Ryu) Control:"

[node name="P1ControlSelector" type="OptionButton" parent="Player1Options"]
layout_mode = 2

[node name="Player2Options" type="VBoxContainer" parent="."]
offset_left = 800.0
offset_top = 106.0
offset_right = 1139.0
offset_bottom = 187.0

[node name="P2ControlSelector" type="OptionButton" parent="Player2Options"]
layout_mode = 2

[node name="P2Label" type="Label" parent="Player2Options/P2ControlSelector"]
layout_mode = 2
offset_top = -36.0
offset_right = 339.0
offset_bottom = -4.0
theme_override_font_sizes/font_size = 23
text = "Player 2 (Dummy Ryu) Control:"

[node name="StartButton" type="Button" parent="."]
offset_left = 566.0
offset_top = 294.0
offset_right = 727.0
offset_bottom = 341.0
theme_override_font_sizes/font_size = 28
text = "Start Game"

[node name="ErrorLabel" type="Label" parent="."]
offset_left = 408.0
offset_top = 261.0
offset_right = 448.0
offset_bottom = 284.0

[node name="MatchCount_Input" type="LineEdit" parent="."]
offset_left = 667.0
offset_top = 232.0
offset_right = 735.563
offset_bottom = 263.0

[node name="MatchCount_Label" type="Label" parent="MatchCount_Input"]
layout_mode = 0
offset_left = -127.0
offset_top = 3.0
offset_right = -23.0
offset_bottom = 26.0
text = "Match Count:"
